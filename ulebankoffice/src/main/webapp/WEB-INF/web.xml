<?xml version="1.0" encoding="utf-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	
<!-- 	Filtro para el encoding, que todo sea UTF-8 -->
	
 	<filter>
        <filter-name>encoding-filter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
	<param-name>forceEncoding</param-name>
	<param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encoding-filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    
    
	<!-- location of log4j config file -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/logging.properties</param-value>
	</context-param>

	<!-- applies log4j configuration -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!-- Se debe añadir esta declaración de parámetro de contexto apra que spring 
		cargue la configuración al inciar la aplicación -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:app-config.xml,classpath:security-config.xml</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Mapeado a modo de prueba, para que no aparezca /index...html si no 
		/incio -->
	<servlet>
		<servlet-name>inicio</servlet-name>
		<jsp-file>/index.jsp</jsp-file>
	</servlet>

	<!-- Spring Security Filter needed to security configuration to check and 
		apply security to all application urls -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>FrontalController</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:app-config.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>FrontalController</servlet-name>
		<url-pattern>/*.htm</url-pattern>
		<url-pattern>/</url-pattern>
		<url-pattern>/o/*</url-pattern>
		<url-pattern>/a/*</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>inicio</welcome-file>
	</welcome-file-list>



	<!-- Solución para los caracteres UTF-8. Funciona :) -->

	<jsp-config>
		<jsp-property-group>
			<url-pattern>*.jsp</url-pattern>
			<page-encoding>UTF-8</page-encoding>
		</jsp-property-group>
	</jsp-config>

	<!-- Manejor de errores HTTP http://stackoverflow.com/questions/7066192/how-to-specify-the-default-error-page-in-web-xml -->
	<!-- <error-page> -->
	<!-- <error-code>404</error-code> -->
	<!-- <location>/e/404</location> -->
	<!-- </error-page> -->
	<!-- Actualmente google no permite customizar el error 404 para páginas 
		que no estén mapeadas -->

	<!-- <error-page> -->
	<!-- <exception-type>java.lang.Exception</exception-type> -->
	<!-- <location>/oops</location> -->
	<!-- </error-page> -->

</web-app>
