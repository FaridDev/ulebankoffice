<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/data/mongo
       http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">

	<bean id="authenticator" class="es.unileon.ulebankoffice.domain.Authenticator"
		scope="singleton">
	</bean>

	<bean id="datastore" class="es.unileon.ulebankoffice.domain.Datastore"
		scope="singleton">
	</bean>

	<bean id="productManager" class="es.unileon.ulebankoffice.service.SimpleProductManager">
		<property name="products">
			<list>
				<bean class="es.unileon.ulebankoffice.domain.Product">
					<property name="description" value="Lamp" />
					<property name="price" value="5.75" />
				</bean>
				<bean class="es.unileon.ulebankoffice.domain.Product">
					<property name="description" value="Table" />
					<property name="price" value="75.25" />
				</bean>
				<bean class="es.unileon.ulebankoffice.domain.Product">
					<property name="description" value="Chair" />
					<property name="price" value="22.79" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- Declaración del bean que contrendrá los usuarios. Implementación del 
		06.02.17. Para hacer pruebas y simular el incio de sesión / registro -->
	<bean id="usuariosManager" class="es.unileon.ulebankoffice.service.SimpleUserManager">
		<property name="usuarios">
			<list>
				<bean class="es.unileon.ulebankoffice.domain.User">
					<property name="name" value="admin" />
					<property name="lastname" value="admin" />
					<property name="email" value="admin@ulebankoffice.com" />
					<property name="password" value="password" />
				</bean>
				<bean class="es.unileon.ulebankoffice.domain.User">
					<property name="name" value="nombre" />
					<property name="lastname" value="apellido" />
					<property name="email" value="nombre@ulebankoffice.com" />
					<property name="password" value="password" />
				</bean>
				<bean class="es.unileon.ulebankoffice.domain.User">
					<property name="name" value="Ejemplo1" />
					<property name="lastname" value="Ejemplo1" />
					<property name="email" value="Ejemplo1@ulebankoffice.com" />
					<property name="password" value="password" />
				</bean>
			</list>
		</property>

	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="fileEncodings" value="UTF-8" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- Scans the classpath of this application for @Components to deploy as 
		beans -->
	<context:component-scan base-package="es.unileon.ulebankoffice.web" />

	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- <bean id="localeResolver" -->
	<!-- class="org.springframework.web.servlet.i18n.SessionLocaleResolver"> -->
	<!-- <property name="defaultLocale" value="en" /> -->
	<!-- </bean> -->

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en" />
		<property name="cookieName" value="ULeBankLanguagePreference"></property>
		<property name="cookieMaxAge" value="604800"></property>
	</bean>

	<mvc:interceptors>
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="language" />
		</bean>
	</mvc:interceptors>

	<!-- Configuración para la conexión con la base de datos -->

	<mongo:template db-factory-ref="mongoDBFactory" write-concern="FSYNC_SAFE"/>
	
	<mongo:db-factory id="mongoDBFactory" dbname="ulebankoffice" mongo-ref="mongoClient" />
	
	<mongo:mongo-client id="mongoClient" credentials="razvan:ulerazvanule@ulebankoffice">
	 <mongo:client-options connect-timeout="5000" />
	</mongo:mongo-client>
	
<!-- 	############### ↕↕↕↕↕↕ Son equivalentes ↕↕↕↕↕ ################## -->
	
 	<!-- Factory bean that creates the Mongo instance -->
<!-- 	<bean id="mongo" class="org.springframework.data.mongodb.core.MongoFactoryBean"> -->
<!-- 	</bean> -->
	
 	<!-- MongoTemplate for connecting and quering the documents in the database --> 
<!-- 	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate"> -->
<!-- 		<constructor-arg name="mongo" ref="mongo" /> -->
<!-- 		<constructor-arg name="databaseName" value="ulebanktestdb" /> -->
<!-- 	</bean> -->
	 <!-- Use this post processor to translate any MongoExceptions thrown in @Repository annotated classes -->
<!--     <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />  -->
    
	<mongo:repositories base-package="es.unileon.ulebankoffice.repositories"/>
</beans>